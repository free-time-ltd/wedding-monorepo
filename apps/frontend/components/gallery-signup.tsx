"use client";

import { FormEvent, useEffect, useState } from "react";
import { CheckCircle2 } from "lucide-react";
import { toast } from "@repo/ui";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@repo/ui/components/ui/card";
import { Input } from "@repo/ui/components/ui/input";
import { Button } from "@repo/ui/components/ui/button";

const STORAGE_KEY = "weddingGallerySubscribed";

export function WeddingGallerySignup() {
  const [email, setEmail] = useState("");
  const [loading, setLoading] = useState(false);
  const [isSubscribed, setIsSubscribed] = useState(false);

  // Check if user has already subscribed
  useEffect(() => {
    const stored = localStorage.getItem(STORAGE_KEY);
    if (stored) {
      setIsSubscribed(true);
    }
  }, []);

  async function handleSubmit(e: FormEvent) {
    e.preventDefault();

    if (!email || !email.includes("@")) {
      toast.error("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª –∞–¥—Ä–µ—Å.");
      return;
    }

    setLoading(true);

    try {
      const url = new URL(
        "/api/gallery/newsletter/subscribe",
        process.env.NEXT_PUBLIC_API_BASE_URL
      );
      const res = await fetch(url, {
        credentials: "include",
        method: "POST",
        body: JSON.stringify({ email }),
      });

      if (!res.ok) {
        throw new Error("–í—ä–∑–Ω–∏–∫–Ω–∞ –ø—Ä–æ–±–ª–µ–º —Å—ä—Å –∑–∞–ø–∏—Å–≤–∞–Ω–µ—Ç–æ –Ω–∞ –∏–º–µ–π–ª –∞–¥—Ä–µ—Å.", {
          cause: res,
        });
      }

      localStorage.setItem(STORAGE_KEY, email);
      setIsSubscribed(true);
      toast.success("–ê–±–æ–Ω–∞–º–µ–Ω—Ç—ä—Ç –µ —É—Å–ø–µ—à–µ–Ω!");
    } catch {
      toast.error("–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.");
    } finally {
      setLoading(false);
    }
  }

  const resetEmail = () => {
    localStorage.removeItem(STORAGE_KEY);
    setIsSubscribed(false);
  };

  return (
    <Card className="max-w-md mx-auto text-center p-4">
      {!isSubscribed ? (
        <>
          <CardHeader>
            <CardTitle className="text-xl font-semibold">
              –ê–±–æ–Ω–∏—Ä–∞–π—Ç–µ —Å–µ –∑–∞ —Å–≤–∞—Ç–±–µ–Ω–∞—Ç–∞ –≥–∞–ª–µ—Ä–∏—è üíç
            </CardTitle>
            <CardDescription>
              –û—Å—Ç–∞–≤–µ—Ç–µ —Å–≤–æ—è –∏–º–µ–π–ª, –∑–∞ –¥–∞ –ø–æ–ª—É—á–∏—Ç–µ –∏–∑–≤–µ—Å—Ç–∏–µ, –∫–æ–≥–∞—Ç–æ —Å–Ω–∏–º–∫–∏—Ç–µ –æ—Ç
              —Å–≤–∞—Ç–±–∞—Ç–∞ —Å–∞ –≥–æ—Ç–æ–≤–∏.
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="flex gap-2">
              <Input
                type="email"
                placeholder="–í—ä–≤–µ–¥–µ—Ç–µ —Å–≤–æ—è –∏–º–µ–π–ª"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
              />
              <Button type="submit" disabled={loading}>
                {loading ? "–ò–∑–ø—Ä–∞—â–∞–Ω–µ..." : "–ò–∑–ø—Ä–∞—Ç–∏"}
              </Button>
            </form>
            <p className="text-sm text-muted-foreground mt-3">
              –©–µ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ –ø–æ –∏–º–µ–π–ª, —á–µ —Å—Ç–µ —Å–µ –∞–±–æ–Ω–∏—Ä–∞–ª–∏.
            </p>
          </CardContent>
        </>
      ) : (
        <CardContent className="flex flex-col items-center justify-center py-8">
          <CheckCircle2 className="w-12 h-12 text-green-500 mb-3" />
          <h2 className="text-xl font-semibold mb-1 font-serif">
            –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏! üíå
          </h2>
          <p className="text-muted-foreground">
            –í–µ—á–µ —Å—Ç–µ –∞–±–æ–Ω–∏—Ä–∞–Ω–∏ –∏ —â–µ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—Ç–∞ –ø–æ—â–∞ (
            <span className="font-semibold">
              {localStorage.getItem(STORAGE_KEY)}
            </span>
            ), –∫–æ–≥–∞—Ç–æ –≥–∞–ª–µ—Ä–∏—è—Ç–∞ –µ –≥–æ—Ç–æ–≤–∞.
          </p>
          <p className="text-muted-foreground py-4">
            –ê–∫–æ –º–∏—Å–ª–∏—Ç–µ, —á–µ —Å—Ç–µ –¥–æ–ø—É—Å–Ω–∞–ª–∏ –≥—Ä–µ—à–∫–∞{" "}
            <Button type="button" variant="link" onClick={resetEmail}>
              –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ
            </Button>
          </p>
        </CardContent>
      )}
    </Card>
  );
}
